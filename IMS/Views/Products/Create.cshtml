@model IMS.Models.Product

@{
    ViewBag.Title = "Create";
}
@*<link href="~/Content/css/CategoryCreate.css" rel="stylesheet" />*@

<div class="header bg-gradient-primary pb-5 pt-3 pt-md-5">
</div>
<div class="container" style="background-color:#95999e">


    <div class="container col-md-10" style="background-color:#ffffff; color:#000000">

        <h2 style="margin-left:350px">ADD NEW PRODUCT</h2>


        @using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))

        {
            @Html.AntiForgeryToken()


            <div class="form-horizontal">

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })

                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control " } })
                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="row" style="margin-left:15px">
                        @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control col-md-9" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        <input type="button" value="+" id="myBtn" @*onclick="location.href='@Url.Action("Create", "Categories")'"*@ />
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ColorId, "ColorId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ColorId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ColorId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SizeId, "SizeId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("SizeId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SizeId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductQuantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductQuantity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AlertQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AlertQuantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AlertQuantity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SellingPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SellingPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SellingPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductImage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        <input type="file" id="ProductImage" name="ProductImage" class="form-control" /><br />
                        @Html.ValidationMessageFor(model => model.SellingPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <input type="hidden" name="ProductDate" value="@DateTime.Now">
                <input type="hidden" name="ManufactureId" value="2" />



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" id="productCreate" class="btn btn-default" />
                    </div>
                </div>
            </div>


        }

    </div>
</div>
@* Script for error showing*@

@if (ViewBag.FileStatus != null)
{
    <script>

$(document).ready(function(){

alert('@ViewBag.FileStatus');

});

    </script>

}



<div style="width:50%;margin-left:250px;margin-top:150px" id="myModal" class="modal">
   
    <div class="modal-content">
            <div class="modal-header" style="background-color:#5cb85c;color:#ffffff">
                <h2 style="margin-left:250px;color:#ffffff">Add a Category</h2>
                <span class="close">&times;</span>

            </div>
            <div class="modal-body">
                <input type="text" name="CategoryName" id="CategoryName" style="width:80%;height:50px" />

            </div>
            <div class="modal-footer" style="background-color:#5cb85c;color:#ffffff">
                
                <input type="button" style="width:30%" value="Add" onclick="location.href='@Url.Action("AddNewCategory", "Category")?qty=' + document.getElementById('CategoryName').value" />
            </div>
        </div>
    

</div>

<script>
    // Get the modal
    var modal = document.getElementById("myModal");

    // Get the button that opens the modal
    var btn = document.getElementById("myBtn");

    // Get the <span> element that closes the modal
    var span = document.getElementsByClassName("close")[0];

    // When the user clicks the button, open the modal
    btn.onclick = function () {
        modal.style.display = "block";
    }

    // When the user clicks on <span> (x), close the modal
    span.onclick = function () {
        modal.style.display = "none";
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }
</script>

<script>

    $("#productCreate").on('click', function () {

        
        alert("Added Successfully");
    })

</script>

